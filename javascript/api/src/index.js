/**
 * Arm API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApiConflictError from './model/ApiConflictError';
import ApiError from './model/ApiError';
import ApiNotFoundError from './model/ApiNotFoundError';
import ApiToken from './model/ApiToken';
import Bit from './model/Bit';
import Credentials from './model/Credentials';
import Firmware from './model/Firmware';
import GpioStateDefinition from './model/GpioStateDefinition';
import Image from './model/Image';
import Instance from './model/Instance';
import InstanceBootOptions from './model/InstanceBootOptions';
import InstanceConsoleEndpoint from './model/InstanceConsoleEndpoint';
import InstanceCreateOptions from './model/InstanceCreateOptions';
import InstanceNetmonState from './model/InstanceNetmonState';
import InstanceReturn from './model/InstanceReturn';
import InstanceServices from './model/InstanceServices';
import InstanceStartOptions from './model/InstanceStartOptions';
import InstanceState from './model/InstanceState';
import InstanceStopOptions from './model/InstanceStopOptions';
import Model from './model/Model';
import ModelSoftware from './model/ModelSoftware';
import PeripheralsData from './model/PeripheralsData';
import Project from './model/Project';
import ProjectQuota from './model/ProjectQuota';
import ProjectSettings from './model/ProjectSettings';
import ProjectUsage from './model/ProjectUsage';
import Snapshot from './model/Snapshot';
import SnapshotCreationOptions from './model/SnapshotCreationOptions';
import SnapshotStatus from './model/SnapshotStatus';
import Token from './model/Token';
import UserError from './model/UserError';
import V1SetStateBody from './model/V1SetStateBody';
import VolumeOptions from './model/VolumeOptions';
import VpnDefinition from './model/VpnDefinition';
import ArmApi from './Arm/ArmApi';


/**
* Arm Virtual Hosting API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ArmApi = require('index'); // See note below*.
* var xxxSvc = new ArmApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ArmApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ArmApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ArmApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApiConflictError model constructor.
     * @property {module:model/ApiConflictError}
     */
    ApiConflictError,

    /**
     * The ApiError model constructor.
     * @property {module:model/ApiError}
     */
    ApiError,

    /**
     * The ApiNotFoundError model constructor.
     * @property {module:model/ApiNotFoundError}
     */
    ApiNotFoundError,

    /**
     * The ApiToken model constructor.
     * @property {module:model/ApiToken}
     */
    ApiToken,

    /**
     * The Bit model constructor.
     * @property {module:model/Bit}
     */
    Bit,

    /**
     * The Credentials model constructor.
     * @property {module:model/Credentials}
     */
    Credentials,

    /**
     * The Firmware model constructor.
     * @property {module:model/Firmware}
     */
    Firmware,

    /**
     * The GpioStateDefinition model constructor.
     * @property {module:model/GpioStateDefinition}
     */
    GpioStateDefinition,

    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The InstanceBootOptions model constructor.
     * @property {module:model/InstanceBootOptions}
     */
    InstanceBootOptions,

    /**
     * The InstanceConsoleEndpoint model constructor.
     * @property {module:model/InstanceConsoleEndpoint}
     */
    InstanceConsoleEndpoint,

    /**
     * The InstanceCreateOptions model constructor.
     * @property {module:model/InstanceCreateOptions}
     */
    InstanceCreateOptions,

    /**
     * The InstanceNetmonState model constructor.
     * @property {module:model/InstanceNetmonState}
     */
    InstanceNetmonState,

    /**
     * The InstanceReturn model constructor.
     * @property {module:model/InstanceReturn}
     */
    InstanceReturn,

    /**
     * The InstanceServices model constructor.
     * @property {module:model/InstanceServices}
     */
    InstanceServices,

    /**
     * The InstanceStartOptions model constructor.
     * @property {module:model/InstanceStartOptions}
     */
    InstanceStartOptions,

    /**
     * The InstanceState model constructor.
     * @property {module:model/InstanceState}
     */
    InstanceState,

    /**
     * The InstanceStopOptions model constructor.
     * @property {module:model/InstanceStopOptions}
     */
    InstanceStopOptions,

    /**
     * The Model model constructor.
     * @property {module:model/Model}
     */
    Model,

    /**
     * The ModelSoftware model constructor.
     * @property {module:model/ModelSoftware}
     */
    ModelSoftware,

    /**
     * The PeripheralsData model constructor.
     * @property {module:model/PeripheralsData}
     */
    PeripheralsData,

    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project,

    /**
     * The ProjectQuota model constructor.
     * @property {module:model/ProjectQuota}
     */
    ProjectQuota,

    /**
     * The ProjectSettings model constructor.
     * @property {module:model/ProjectSettings}
     */
    ProjectSettings,

    /**
     * The ProjectUsage model constructor.
     * @property {module:model/ProjectUsage}
     */
    ProjectUsage,

    /**
     * The Snapshot model constructor.
     * @property {module:model/Snapshot}
     */
    Snapshot,

    /**
     * The SnapshotCreationOptions model constructor.
     * @property {module:model/SnapshotCreationOptions}
     */
    SnapshotCreationOptions,

    /**
     * The SnapshotStatus model constructor.
     * @property {module:model/SnapshotStatus}
     */
    SnapshotStatus,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The UserError model constructor.
     * @property {module:model/UserError}
     */
    UserError,

    /**
     * The V1SetStateBody model constructor.
     * @property {module:model/V1SetStateBody}
     */
    V1SetStateBody,

    /**
     * The VolumeOptions model constructor.
     * @property {module:model/VolumeOptions}
     */
    VolumeOptions,

    /**
     * The VpnDefinition model constructor.
     * @property {module:model/VpnDefinition}
     */
    VpnDefinition,

    /**
    * The ArmApi service constructor.
    * @property {module:Arm/ArmApi}
    */
    ArmApi
};
