/**
 * Arm API
 * REST API to manage your virtual devices.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiToken model module.
 * @module model/ApiToken
 * @version 1.0.0
 */
class ApiToken {
    /**
     * Constructs a new <code>ApiToken</code>.
     * @alias module:model/ApiToken
     * @param apiToken {String} 
     */
    constructor(apiToken) { 
        
        ApiToken.initialize(this, apiToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apiToken) { 
        obj['apiToken'] = apiToken;
    }

    /**
     * Constructs a <code>ApiToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiToken} obj Optional instance to populate.
     * @return {module:model/ApiToken} The populated <code>ApiToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiToken();

            if (data.hasOwnProperty('apiToken')) {
                obj['apiToken'] = ApiClient.convertToType(data['apiToken'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} apiToken
 */
ApiToken.prototype['apiToken'] = undefined;






export default ApiToken;

