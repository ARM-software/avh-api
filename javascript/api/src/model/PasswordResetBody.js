/**
 * Arm API
 *    This documents the Arm Virtual Hosting REST API.  For other examples and API clients such as python or javascript please see [API Clients (python/javascript)](https://github.com/ARM-software/avh-api).   For a guide on using this interface please see [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   ## Links   - [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   - [API Clients (python/javascript)](https://github.com/arm-software/avh-api)   
 *
 * The version of the OpenAPI document: 3.15.0-15704
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PasswordResetBody model module.
 * @module model/PasswordResetBody
 * @version 1.0.2
 */
class PasswordResetBody {
    /**
     * Constructs a new <code>PasswordResetBody</code>.
     * 
     * @alias module:model/PasswordResetBody
     * @param token {String} Password reset token
     * @param totpToken {String} Password reset totpToken
     * @param newPassword {String} new password
     */
    constructor(token, totpToken, newPassword) { 
        
        PasswordResetBody.initialize(this, token, totpToken, newPassword);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, token, totpToken, newPassword) { 
        obj['token'] = token;
        obj['totpToken'] = totpToken;
        obj['new-password'] = newPassword;
    }

    /**
     * Constructs a <code>PasswordResetBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PasswordResetBody} obj Optional instance to populate.
     * @return {module:model/PasswordResetBody} The populated <code>PasswordResetBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PasswordResetBody();

            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('totpToken')) {
                obj['totpToken'] = ApiClient.convertToType(data['totpToken'], 'String');
            }
            if (data.hasOwnProperty('new-password')) {
                obj['new-password'] = ApiClient.convertToType(data['new-password'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Password reset token
 * @member {String} token
 */
PasswordResetBody.prototype['token'] = undefined;

/**
 * Password reset totpToken
 * @member {String} totpToken
 */
PasswordResetBody.prototype['totpToken'] = undefined;

/**
 * new password
 * @member {String} new-password
 */
PasswordResetBody.prototype['new-password'] = undefined;






export default PasswordResetBody;

