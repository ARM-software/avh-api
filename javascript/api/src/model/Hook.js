/**
 * Arm API
 *    This documents the Arm Virtual Hosting REST API.  For other examples and API clients such as python or javascript please see [API Clients (python/javascript)](https://github.com/ARM-software/avh-api).   For a guide on using this interface please see [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   ## Links   - [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   - [API Clients (python/javascript)](https://github.com/arm-software/avh-api)   
 *
 * The version of the OpenAPI document: 3.15.0-15704
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Hook model module.
 * @module model/Hook
 * @version 1.0.3
 */
class Hook {
    /**
     * Constructs a new <code>Hook</code>.
     * 
     * @alias module:model/Hook
     */
    constructor() { 
        
        Hook.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Hook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Hook} obj Optional instance to populate.
     * @return {module:model/Hook} The populated <code>Hook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Hook();

            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('patch')) {
                obj['patch'] = ApiClient.convertToType(data['patch'], 'String');
            }
            if (data.hasOwnProperty('patchType')) {
                obj['patchType'] = ApiClient.convertToType(data['patchType'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Identifier
 * @member {String} identifier
 */
Hook.prototype['identifier'] = undefined;

/**
 * Label
 * @member {String} label
 */
Hook.prototype['label'] = undefined;

/**
 * Address
 * @member {String} address
 */
Hook.prototype['address'] = undefined;

/**
 * Patch
 * @member {String} patch
 */
Hook.prototype['patch'] = undefined;

/**
 * Patch Type
 * @member {module:model/Hook.PatchTypeEnum} patchType
 */
Hook.prototype['patchType'] = undefined;

/**
 * If true, instances can call required hooks
 * @member {Boolean} enabled
 */
Hook.prototype['enabled'] = undefined;

/**
 * Created Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
 * @member {String} createdAt
 */
Hook.prototype['createdAt'] = undefined;

/**
 * Updated Date in ISO-8601 format e.g. 2022-05-06T02:39:23.000Z
 * @member {String} updatedAt
 */
Hook.prototype['updatedAt'] = undefined;

/**
 * Instance Id
 * @member {String} instanceId
 */
Hook.prototype['instanceId'] = undefined;





/**
 * Allowed values for the <code>patchType</code> property.
 * @enum {String}
 * @readonly
 */
Hook['PatchTypeEnum'] = {

    /**
     * value: "csmfcc"
     * @const
     */
    "csmfcc": "csmfcc",

    /**
     * value: "csmfvm"
     * @const
     */
    "csmfvm": "csmfvm"
};



export default Hook;

