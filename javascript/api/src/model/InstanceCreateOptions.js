/**
 * Arm API
 *    This documents the Arm Virtual Hosting REST API.  For other examples and API clients such as python or javascript please see [API Clients (python/javascript)](https://github.com/ARM-software/avh-api).   For a guide on using this interface please see [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   ## Links   - [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   - [API Clients (python/javascript)](https://github.com/arm-software/avh-api)   
 *
 * The version of the OpenAPI document: 3.15.0-15704
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstanceBootOptions from './InstanceBootOptions';
import Model from './Model';
import VolumeOptions from './VolumeOptions';

/**
 * The InstanceCreateOptions model module.
 * @module model/InstanceCreateOptions
 * @version 1.0.3
 */
class InstanceCreateOptions {
    /**
     * Constructs a new <code>InstanceCreateOptions</code>.
     * 
     * @alias module:model/InstanceCreateOptions
     * @param flavor {String} the flavor id
     * @param project {String} project UUID
     * @param os {String} OS Version
     */
    constructor(flavor, project, os) { 
        
        InstanceCreateOptions.initialize(this, flavor, project, os);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, flavor, project, os) { 
        obj['flavor'] = flavor;
        obj['project'] = project;
        obj['os'] = os;
    }

    /**
     * Constructs a <code>InstanceCreateOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceCreateOptions} obj Optional instance to populate.
     * @return {module:model/InstanceCreateOptions} The populated <code>InstanceCreateOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceCreateOptions();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('flavor')) {
                obj['flavor'] = ApiClient.convertToType(data['flavor'], 'String');
            }
            if (data.hasOwnProperty('project')) {
                obj['project'] = ApiClient.convertToType(data['project'], 'String');
            }
            if (data.hasOwnProperty('os')) {
                obj['os'] = ApiClient.convertToType(data['os'], 'String');
            }
            if (data.hasOwnProperty('osbuild')) {
                obj['osbuild'] = ApiClient.convertToType(data['osbuild'], 'String');
            }
            if (data.hasOwnProperty('patches')) {
                obj['patches'] = ApiClient.convertToType(data['patches'], ['String']);
            }
            if (data.hasOwnProperty('fwpackage')) {
                obj['fwpackage'] = ApiClient.convertToType(data['fwpackage'], 'String');
            }
            if (data.hasOwnProperty('origFwPackageUrl')) {
                obj['origFwPackageUrl'] = ApiClient.convertToType(data['origFwPackageUrl'], 'String');
            }
            if (data.hasOwnProperty('encrypt')) {
                obj['encrypt'] = ApiClient.convertToType(data['encrypt'], 'Boolean');
            }
            if (data.hasOwnProperty('overrideWifiMAC')) {
                obj['overrideWifiMAC'] = ApiClient.convertToType(data['overrideWifiMAC'], 'String');
            }
            if (data.hasOwnProperty('volume')) {
                obj['volume'] = VolumeOptions.constructFromObject(data['volume']);
            }
            if (data.hasOwnProperty('snapshot')) {
                obj['snapshot'] = ApiClient.convertToType(data['snapshot'], 'String');
            }
            if (data.hasOwnProperty('bootOptions')) {
                obj['bootOptions'] = InstanceBootOptions.constructFromObject(data['bootOptions']);
            }
            if (data.hasOwnProperty('device')) {
                obj['device'] = Model.constructFromObject(data['device']);
            }
        }
        return obj;
    }


}

/**
 * the name of the device
 * @member {String} name
 */
InstanceCreateOptions.prototype['name'] = undefined;

/**
 * Key used to encrypt the Instance
 * @member {String} key
 */
InstanceCreateOptions.prototype['key'] = undefined;

/**
 * the flavor id
 * @member {String} flavor
 */
InstanceCreateOptions.prototype['flavor'] = undefined;

/**
 * project UUID
 * @member {String} project
 */
InstanceCreateOptions.prototype['project'] = undefined;

/**
 * OS Version
 * @member {String} os
 */
InstanceCreateOptions.prototype['os'] = undefined;

/**
 * OS Build
 * @member {String} osbuild
 */
InstanceCreateOptions.prototype['osbuild'] = undefined;

/**
 * list of patches to apply
 * @member {Array.<String>} patches
 */
InstanceCreateOptions.prototype['patches'] = undefined;

/**
 * URL or image id
 * @member {String} fwpackage
 */
InstanceCreateOptions.prototype['fwpackage'] = undefined;

/**
 * URL that firmware package used to create this instance is available at
 * @member {String} origFwPackageUrl
 */
InstanceCreateOptions.prototype['origFwPackageUrl'] = undefined;

/**
 * 
 * @member {Boolean} encrypt
 */
InstanceCreateOptions.prototype['encrypt'] = undefined;

/**
 * 
 * @member {String} overrideWifiMAC
 */
InstanceCreateOptions.prototype['overrideWifiMAC'] = undefined;

/**
 * @member {module:model/VolumeOptions} volume
 */
InstanceCreateOptions.prototype['volume'] = undefined;

/**
 * Snapshot ID
 * @member {String} snapshot
 */
InstanceCreateOptions.prototype['snapshot'] = undefined;

/**
 * @member {module:model/InstanceBootOptions} bootOptions
 */
InstanceCreateOptions.prototype['bootOptions'] = undefined;

/**
 * @member {module:model/Model} device
 */
InstanceCreateOptions.prototype['device'] = undefined;






export default InstanceCreateOptions;

