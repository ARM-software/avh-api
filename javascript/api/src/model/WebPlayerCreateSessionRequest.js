/**
 * Arm API
 *    This documents the Arm Virtual Hosting REST API.  For other examples and API clients such as python or javascript please see [API Clients (python/javascript)](https://github.com/ARM-software/avh-api).   For a guide on using this interface please see [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   ## Links   - [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   - [API Clients (python/javascript)](https://github.com/arm-software/avh-api)   
 *
 * The version of the OpenAPI document: 3.15.0-15704
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Features from './Features';

/**
 * The WebPlayerCreateSessionRequest model module.
 * @module model/WebPlayerCreateSessionRequest
 * @version 1.0.2
 */
class WebPlayerCreateSessionRequest {
    /**
     * Constructs a new <code>WebPlayerCreateSessionRequest</code>.
     * 
     * @alias module:model/WebPlayerCreateSessionRequest
     * @param projectId {String} Project Identifier
     * @param instanceId {String} VM Instance Identifier
     * @param expiresIn {Number} Number of seconds token remains valid
     * @param features {module:model/Features} 
     */
    constructor(projectId, instanceId, expiresIn, features) { 
        
        WebPlayerCreateSessionRequest.initialize(this, projectId, instanceId, expiresIn, features);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, projectId, instanceId, expiresIn, features) { 
        obj['projectId'] = projectId;
        obj['instanceId'] = instanceId;
        obj['expiresIn'] = expiresIn;
        obj['features'] = features;
    }

    /**
     * Constructs a <code>WebPlayerCreateSessionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebPlayerCreateSessionRequest} obj Optional instance to populate.
     * @return {module:model/WebPlayerCreateSessionRequest} The populated <code>WebPlayerCreateSessionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebPlayerCreateSessionRequest();

            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
            if (data.hasOwnProperty('expiresIn')) {
                obj['expiresIn'] = ApiClient.convertToType(data['expiresIn'], 'Number');
            }
            if (data.hasOwnProperty('features')) {
                obj['features'] = Features.constructFromObject(data['features']);
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Project Identifier
 * @member {String} projectId
 */
WebPlayerCreateSessionRequest.prototype['projectId'] = undefined;

/**
 * VM Instance Identifier
 * @member {String} instanceId
 */
WebPlayerCreateSessionRequest.prototype['instanceId'] = undefined;

/**
 * Number of seconds token remains valid
 * @member {Number} expiresIn
 */
WebPlayerCreateSessionRequest.prototype['expiresIn'] = undefined;

/**
 * @member {module:model/Features} features
 */
WebPlayerCreateSessionRequest.prototype['features'] = undefined;

/**
 * Optional string value supplied by client for tracking purposes
 * @member {String} clientId
 */
WebPlayerCreateSessionRequest.prototype['clientId'] = undefined;






export default WebPlayerCreateSessionRequest;

