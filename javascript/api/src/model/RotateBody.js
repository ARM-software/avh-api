/**
 * Arm API
 *    This documents the Arm Virtual Hosting REST API.  For other examples and API clients such as python or javascript please see [API Clients (python/javascript)](https://github.com/ARM-software/avh-api).   For a guide on using this interface please see [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   ## Links   - [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   - [API Clients (python/javascript)](https://github.com/arm-software/avh-api)   
 *
 * The version of the OpenAPI document: 3.15.0-15704
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RotateBody model module.
 * @module model/RotateBody
 * @version 1.0.3
 */
class RotateBody {
    /**
     * Constructs a new <code>RotateBody</code>.
     * 
     * @alias module:model/RotateBody
     * @param orientation {module:model/RotateBody.OrientationEnum} Desired orientation
     */
    constructor(orientation) { 
        
        RotateBody.initialize(this, orientation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, orientation) { 
        obj['orientation'] = orientation;
    }

    /**
     * Constructs a <code>RotateBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RotateBody} obj Optional instance to populate.
     * @return {module:model/RotateBody} The populated <code>RotateBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RotateBody();

            if (data.hasOwnProperty('orientation')) {
                obj['orientation'] = ApiClient.convertToType(data['orientation'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Desired orientation
 * @member {module:model/RotateBody.OrientationEnum} orientation
 */
RotateBody.prototype['orientation'] = undefined;





/**
 * Allowed values for the <code>orientation</code> property.
 * @enum {Number}
 * @readonly
 */
RotateBody['OrientationEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4
};



export default RotateBody;

